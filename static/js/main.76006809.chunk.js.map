{"version":3,"sources":["Components/default/close.svg","Components/localStorage.js","Components/default/defaultModel.js","Components/state/Data/Data.js","Components/state/Data/DataProvider.js","Components/main/main.js","Components/state/NewItem/types.js","Components/state/NewItem/NewItem.js","Components/Button/Button.js","Components/Table/Table.js","Components/Card/Card.js","Components/Alert/Alert.js","Components/Form/Forms.js","Components/Input/Input.js","Components/Datalist/Datalist.js","Components/Modal/Modal.js","Components/TextArea/TextArea.js","Components/CardViewe/CardViewe.js","Components/Body/Body.js","Components/Header/Header.js","Components/NavBar/NavBar.js","App.js","index.js"],"names":["module","exports","getItem","key","value","localStorage","collection","reference","metadata","total_tables","tables","name","position","cards","Data","createContext","Provider","children","useState","JSON","parse","stringify","data","setData","useEffect","setItem","order","target","sort","a","b","TYPE_NEW_CARD","type","TYPE_NEW_TABLE","TYPE_DEFAULT","stateDefault","card","table","title","description","priority","initial","final","properties","color","NewItem","state","action","payload","Error","Button","className","this","props","onClick","onAction","Component","Table","useContext","uuidv4","from","to","filter","newOrder","bind","length","filtereds","map","indice","Card","style","background","date","now","Date","getFullYear","getMonth","getDate","Alert","slice","Forms","method","onSubmit","Input","label","placeholder","onChange","event","onInput","required","min","max","step","Datalist","items","item","Modal","show","handleDrop","transform","display","opacity","src","close","alt","TextArea","rows","size","cols","CardViewe","Body","useReducer","newItem","setNew","modal","setShow","removeCard","filterTable","updateCards","advancedTask","backTask","handleEdit","viewe","preventDefault","window","alert","pop","orderingCards","updateTable","resize","Header","NavBar","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76006809.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.43875f2e.svg\";","export const setItem = (key, value) => localStorage.setItem(key, value); //para criar um do par chave: valor;\r\n\r\nexport const getItem = (key, value) => localStorage.getItem(key, value); //para recuperar o valor do par chave: valor;\r\n\r\nexport const removeItem = (key, value) => localStorage.removeItem(key, value); //para remover um par específico;\r\n\r\nexport const clearStorage = () => localStorage.clear();","export const collection = {\r\n    reference: \"\",\r\n    metadata: { total_tables: 3 },\r\n    tables: [\r\n        { name: \"ToDo\", position: 0, cards: [] },\r\n        { name: \"In Production\", position: 1, cards: [] },\r\n        { name: \"Concluded\", position: 2, cards: [] }\r\n    ]\r\n}","import { createContext } from 'react';\r\n\r\nexport const Data = createContext();","import React, { useState, useEffect } from 'react';\r\nimport { getItem, setItem } from '../../localStorage'\r\nimport { collection } from '../../default/defaultModel'\r\nimport { Data } from './Data'\r\n\r\nexport default function Provider( { children } ) {\r\n\r\n    const [data, setData] = useState(JSON.parse(getItem('@kanban-web/collection', JSON.stringify(collection))) === null \r\n    ? collection : JSON.parse(getItem('@kanban-web/collection', collection)));\r\n\r\n    useEffect(() => setItem('@kanban-web/collection', JSON.stringify(data)), [data, setData])\r\n\r\n    return (\r\n        <Data.Provider value={ { data, setData } }>\r\n            {children}\r\n        </Data.Provider>\r\n    );\r\n\r\n}","export const order = target => {\r\n    target.sort((a,b) => {\r\n      if(a.position > b.position){\r\n        return 1;\r\n      }\r\n      if(a.position < b.position){\r\n        return -1;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    })\r\n  }","export const NEW_CARD = \"NEW_CARD\";\r\nexport const NEW_TABLE = \"NEW_TABLE\";\r\nexport const DEFAULT = \"DEFAULT\";\r\n\r\nexport const TYPE_NEW_CARD = { type: NEW_CARD };\r\nexport const TYPE_NEW_TABLE = { type: NEW_TABLE };\r\nexport const TYPE_DEFAULT = { type: DEFAULT };\r\n\r\n","import { NEW_TABLE, NEW_CARD, DEFAULT } from './types';\r\n\r\nexport const stateDefault = {\r\n    card:\r\n    {\r\n        position:'',\r\n        table:'',\r\n        title: '',\r\n        description: '',\r\n        priority: 'Normal',\r\n        initial: '',\r\n        final: '',\r\n        properties : { color:\"#FFFFFF\" }\r\n    },\r\n    table:\r\n    {\r\n        name:'',\r\n        position:'',\r\n        cards:[]\r\n    }\r\n}\r\n\r\nexport default function NewItem(state, action) {\r\n\r\n    switch (action.type){\r\n        case NEW_CARD:\r\n            return {...stateDefault, card: action.payload};\r\n        case NEW_TABLE:\r\n            return {...stateDefault, table: action.payload};\r\n        case DEFAULT:\r\n            return stateDefault;\r\n        default: \r\n            throw new Error();\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Button extends Component{\r\n    render(){\r\n        return (\r\n            <button className={this.props.name} onClick={this.props.onAction} type={this.props.type}>\r\n                {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n}","import React, { useContext } from 'react';\r\nimport { order } from '../main/main'\r\n\r\nimport { Data } from '../state/Data/Data';\r\n\r\nimport Button from '../Button/Button';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './Table.css';\r\n\r\nconst Table = props => {\r\n\r\n    const { data, setData } = useContext(Data);\r\n\r\n    const removeTable = table => {\r\n        let filtereds = data.tables.filter(target => target.name !== table.name);\r\n        filtereds.map((target, indice) => target.position = indice);\r\n        setData({ ...data, metadata: filtereds.length, tables: filtereds});\r\n    }\r\n    \r\n    const leftMove = table => {\r\n        if(table.position > 0){\r\n            let from = {...table, position: (table.position-1), children: []};\r\n            let to = data.tables.filter(target => target.position === from.position)[0];\r\n\r\n            to = {...to, position: to.position + 1 };\r\n\r\n            let newOrder = data.tables.filter(target => (target.position !== to.position && target.position !== from.position));\r\n\r\n            newOrder = [...newOrder, from, to];\r\n\r\n            order(newOrder);\r\n            \r\n            setData({...data, tables: newOrder});\r\n        }\r\n    }\r\n\r\n    const rightMove = table => {\r\n        if(table.position < data.tables.length-1){\r\n            let from = {...table, position: (table.position+1), children: []};\r\n            let to = data.tables.filter(target => target.position === from.position)[0];\r\n\r\n            to = {...to, position: to.position-1 }\r\n\r\n            let newOrder = data.tables.filter(target => (target.position !== to.position && target.position !== from.position));\r\n\r\n            newOrder = [...newOrder, from, to]\r\n\r\n            order(newOrder)\r\n\r\n            setData({...data, tables: newOrder})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='table' key={uuidv4()}>\r\n            <div className=\"tableHeader\">\r\n                <Button value=\"&#9664;\" onAction={leftMove.bind(this, props.table)}/>\r\n                <Button value=\"&#9654;\" onAction={rightMove.bind(this, props.table)}/>\r\n                {props.table.cards.length !== 0 ? <Button value=\"&#128204;\" onAction={props.onAction}/> : null}\r\n                <Button value=\"&#9940;\" onAction={removeTable.bind(this, props.table)}/>\r\n            </div>\r\n            \r\n            <h4>{props.table.name}</h4>\r\n\r\n            <div>{props.children}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Table;","import React, { Component }from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Alert from '../Alert/Alert'\r\n\r\nimport './Card.css';\r\n\r\nexport default class Card extends Component{  \r\n    render(){\r\n        return (\r\n            <>\r\n                <div className=\"card\" style={{background: this.props.card.properties.color}} key={uuidv4()}>\r\n                    <div className=\"cardHeader\">\r\n                        {this.props.children}\r\n                        <div className=\"priority\">\r\n                            {Alert(this.props.card.final)}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"card-body\" onClick={this.props.onAction.bind(this, this.props)}>\r\n                        <p className=\"card-title\">{this.props.card.title}</p>\r\n                        <p className=\"description\">\r\n                            {this.props.card.description.slice(0,150)+'... '}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n};","import React from 'react';\r\nimport './Alert.css'\r\n\r\nexport default function Alert (date) {\r\n    const now = (new Date().getFullYear() + '-' + (new Date().getMonth()+1) + '-' + new Date().getDate())\r\n\r\n    if(now < date){\r\n        return (<span style={{background: '#00ff00'}} className=\"date-alert\"></span>);\r\n    } else if(now === date){\r\n        return (<span style={{background: '#ffff00'}} className=\"date-alert\"></span>);\r\n    } else if(now > date && date !== ''){\r\n        return (<span style={{background: '#ff0000'}} className=\"date-alert\"></span>);\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Form.css'\r\n\r\nexport default class Forms extends Component {\r\n    render(){\r\n        return (\r\n            <form\r\n                className={this.props.className}\r\n                method={this.props.method}\r\n                onSubmit={this.props.onSubmit}\r\n            >\r\n            {this.props.name?<h4>{this.props.name}</h4>:null}\r\n            {this.props.children}\r\n          </form>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Input extends Component {\r\n    render(){\r\n        return (\r\n            <div className={this.props.className}>\r\n                <label>{this.props.label}</label>\r\n                <input\r\n                    type={this.props.type} \r\n                    name={this.props.name}\r\n                    value={this.props.value}\r\n                    placeholder={this.props.placeholder}\r\n                    onChange={event => this.props.onInput(event.target.value) }\r\n                    required={this.props.required}\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    step={this.props.step}\r\n                />\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Datalist extends Component {\r\n    render() {\r\n      return (\r\n        <div className={this.props.className}>\r\n            <label>{this.props.label}</label>\r\n            <select onChange={ event => this.props.onInput(event.target.value) }>            \r\n                {this.props.items.map( item => <option value={item}>{item}</option> ) }\r\n            </select>\r\n        </div>\r\n      );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport close from '../default/close.svg';\r\nimport './Modal.css'\r\n\r\nexport default class Modal extends Component {\r\n    render(){\r\n        return (\r\n            <>\r\n                {this.props.show ? <div onClick={this.props.handleDrop} className=\"modal-drop\"></div> : null}\r\n                <div\r\n                    className=\"modal\"\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\r\n                        display: this.props.show ? 'block' : 'none',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                }}>\r\n                    <div className=\"modal-header\">\r\n                        <p>{this.props.name}</p>\r\n                        <img src={close} onClick={this.props.handleDrop} alt=\"close\" className=\"close-modal-btn\"/>\r\n                    </div>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-body\">\r\n                            {this.props.children}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class TextArea extends Component{\r\n    render(){\r\n        return (\r\n            <div className={this.props.className}>\r\n                <label>{this.props.label}</label>\r\n                <textarea\r\n                    style={this.props.style}\r\n                    rows={this.props.size.rows}\r\n                    cols={this.props.size.cols}\r\n                    type={this.props.type} \r\n                    name={this.props.name}\r\n                    value={this.props.value}\r\n                    onChange={event => this.props.onInput(event.target.value)}\r\n                    required={this.props.required}\r\n                ></textarea>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component }from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './CardViewe.css';\r\n\r\nexport default class CardViewe extends Component{  \r\n    render(){\r\n        return (\r\n            <>\r\n                <div className=\"viewe\" style={{background: this.props.card.properties.color}} key={uuidv4()}>\r\n                    <div className=\"controlViewe\">\r\n                        {this.props.children}\r\n                    </div>\r\n                    <div className=\"headerViewe\">\r\n                        <span className=\"dateViewe\">\r\n                            Data Inicial: {this.props.card.initial}\r\n                        </span>\r\n                        <span className=\"dateViewe\">\r\n                            Previsão: {this.props.card.final}\r\n                        </span>\r\n                    </div>\r\n                    <span className=\"priorityViewe\">\r\n                            Prioridade: <span>{(this.props.card.priority)}</span>\r\n                    </span>\r\n                    <div> \r\n                        <p className=\"description\">\r\n                            {this.props.card.description}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n};","import React, { useContext, useReducer, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { order } from '../main/main';\r\n\r\nimport { Data } from '../state/Data/Data';\r\nimport NewItem, {stateDefault} from '../state/NewItem/NewItem';\r\nimport { TYPE_NEW_TABLE, TYPE_NEW_CARD, TYPE_DEFAULT } from '../state/NewItem/types';\r\n\r\nimport Table from '../Table/Table';\r\nimport Button from '../Button/Button';\r\nimport Card from '../Card/Card';\r\nimport Form from '../Form/Forms';\r\nimport Input from '../Input/Input';\r\nimport Datalist from '../Datalist/Datalist'\r\nimport Modal from '../Modal/Modal';\r\nimport TextArea from '../TextArea/TextArea';\r\nimport CardViewe from '../CardViewe/CardViewe';\r\n\r\nimport './Body.css'\r\n\r\nexport default function Body () {\r\n\r\n    const { data, setData } = useContext(Data);\r\n\r\n    const [newItem, setNew] = useReducer(NewItem, stateDefault);\r\n\r\n    const [ show, setShow ] = useState({show: false, card: newItem.card, modal: ''});\r\n\r\n    const addTable = event => {\r\n        event.preventDefault();\r\n        if(data.tables.filter(table => table.name === newItem.table.name).length === 0 ){\r\n            if (newItem.table.name !== '') {\r\n                setData({ ...data, metadata: { total_tables: data.tables.length+1 }, tables: [...data.tables, newItem.table]});\r\n                setNew( TYPE_DEFAULT );\r\n            }\r\n            else{\r\n                window.alert(\"Name table is required\")\r\n            }\r\n        }\r\n        else{\r\n            window.alert(\"Name table is already in use\")\r\n        }\r\n    }\r\n        \r\n    const createCard = event => {\r\n        event.preventDefault();\r\n        \r\n        if(show.show && newItem.card.title !== '') {\r\n            let table = data.tables.filter(target => target.name === show.table.name)[0];\r\n        \r\n            let card = {...newItem.card, position: table.cards.length, table: table.name, };\r\n            \r\n            let filtereds = data.tables.filter(target => target.name !== table.name);\r\n            \r\n            let updateCards = [...table.cards, card];\r\n        \r\n            let updateTable = {...table, cards: updateCards};\r\n        \r\n            filtereds = [...filtereds, updateTable];\r\n        \r\n            order(filtereds);\r\n        \r\n            setData( {...data, tables: filtereds} );\r\n        \r\n            setNew( TYPE_DEFAULT );\r\n        \r\n            handleDrop();\r\n        }\r\n    }\r\n\r\n    const editCard = event => {\r\n        event.preventDefault();\r\n    \r\n        let from = data.tables.filter(target => target.name === newItem.card.table).pop();\r\n    \r\n        let filtereds = data.tables.filter(target => target.name !== newItem.card.table);\r\n        \r\n        let card = from.cards.filter(target => target.position === newItem.card.position).pop();\r\n    \r\n        from = {...from, cards: from.cards.filter(target => target.position !== newItem.card.position)};\r\n        \r\n        card = {...newItem.card}\r\n    \r\n        let orderingCards = [...from.cards, card]\r\n    \r\n        order(orderingCards)\r\n    \r\n        from = {...from, cards: orderingCards}\r\n    \r\n        filtereds = [...filtereds, from]\r\n    \r\n        order(filtereds)\r\n    \r\n        setData({...data, tables: filtereds})\r\n    \r\n        handleDrop();\r\n    }\r\n        \r\n    const removeCard = card => {\r\n        handleDrop();\r\n        let filterTable = data.tables.filter(target => target.name !== card.table);\r\n        \r\n        let table = data.tables.filter(target => target.name === card.table)[0];\r\n        \r\n        let updateCards = table.cards.filter(target => target.position !== card.position)\r\n        \r\n        table.cards= updateCards\r\n        \r\n        filterTable = [...filterTable, table]\r\n        \r\n        order(filterTable)\r\n        \r\n        setData({...data, tables: filterTable})\r\n    }\r\n        \r\n    const advancedTask = card => {\r\n        let from = data.tables.filter(target => target.name === card.table)[0];\r\n        \r\n        if(from.position < data.tables.length-1) {\r\n            let to = data.tables.filter(target => target.position === from.position+1)[0];\r\n        \r\n            let tables = data.tables.filter(target => target.name !== from.name && target.name !== to.name)\r\n        \r\n            from = {...from, cards: from.cards.filter(target => target.position !== card.position)}\r\n        \r\n            to = {\r\n                ...to,\r\n                cards: [...to.cards,\r\n                    {\r\n                        ...card,\r\n                        table: to.name,\r\n                        position: to.cards.length,\r\n                        properties: (to.position === data.tables.length-1 ? {color: \"#919191\"} : {...card.properties})\r\n                    }\r\n                ]\r\n            }\r\n        \r\n            tables = [...tables, from, to]\r\n        \r\n            order(tables)\r\n        \r\n            setData({...data, tables: tables})\r\n        }\r\n    }\r\n        \r\n    const backTask = card => {\r\n        let from = data.tables.filter(target => target.name === card.table)[0];\r\n        \r\n        if(from.position > 0) {\r\n            let to = data.tables.filter(target => target.position === from.position-1)[0];\r\n        \r\n            let tables = data.tables.filter(target => target.name !== from.name && target.name !== to.name)\r\n        \r\n            from = {...from, cards: from.cards.filter(target => target.position !== card.position)}\r\n        \r\n            to = {\r\n                ...to,\r\n                cards: [...to.cards,\r\n                    {\r\n                        ...card,\r\n                        table: to.name,\r\n                        position: to.cards.length,\r\n                        properties: (to.position === data.tables.length-1 ? {color: \"#919191\"} : {color: \"#FFFFFF\"})\r\n                    }\r\n                ]\r\n            }\r\n        \r\n            tables = [...tables, from, to]\r\n        \r\n            order(tables)\r\n        \r\n            setData({...data, tables: tables})\r\n        }\r\n    }\r\n\r\n    const handleEdit = card => {\r\n        handleDrop();\r\n        setShow( { show: true, viewe: false, card: newItem.card, modal:\"Edit Card\"  } )\r\n        setNew( { ...TYPE_NEW_CARD, payload: { ...card } } )\r\n    }\r\n\r\n    const handleDrop = () => {\r\n        setShow( { show: false, viewe: false, card: newItem.card} )\r\n        setNew( TYPE_DEFAULT )\r\n    }\r\n\r\n    return(\r\n        <div className=\"tables\">\r\n            {data.tables.map(table => (\r\n                <Table key={uuidv4()} onAction={() => setShow({ show: true, viewe: false, card: newItem.card, table: table, modal:\"New Card\" })} table={{...table}}>\r\n                    {table.cards.map(card => {\r\n                        return(\r\n                            <Card key={uuidv4()} card={{...card}} onAction={target => setShow( {...target, viewe: true } ) }>\r\n                                <Button\r\n                                    value=\"edit\"\r\n                                    onAction={handleEdit.bind(this, card)}/>\r\n                                <Button\r\n                                    value=\"&#9664;\"\r\n                                    onAction={backTask.bind(this, card)}/>\r\n                                <Button\r\n                                    value=\"&#9654;\"\r\n                                    onAction={advancedTask.bind(this, card)}/>\r\n                                <Button\r\n                                    value=\"&#9940;\"\r\n                                    onAction={removeCard.bind(this, card)}/>\r\n                            </Card>\r\n                        );\r\n                    })}\r\n                    {table.cards.length === 0 ? <div className=\"initial\"><Button value=\"&#10133;\" onAction={() => (setShow({show: true, viewe:false, card: newItem.card, table: table, modal:\"New Card\"}))}/></div> : null}\r\n                </Table>\r\n            ))}\r\n            <Form className=\"newTable\" name=\"New Table\" method=\"post\" onSubmit={addTable.bind(newItem)} >\r\n                <Input\r\n                    name=\"table\"\r\n                    type=\"text\"\r\n                    value={newItem.table.name}\r\n                    onInput={event => setNew( { ...TYPE_NEW_TABLE, payload: { ...newItem.table, name: event, position: data.tables.length } } )}\r\n                />\r\n                <Button value=\"Add Table\" type=\"submit\" />\r\n            </Form>\r\n            <Modal show={show.show} handleDrop={handleDrop} name={show.modal}>\r\n                <Form\r\n                    className=\"inputCard\"\r\n                    method=\"post\"\r\n                    onSubmit={ show.modal === \"Edit Card\" ? editCard.bind(show) : createCard.bind(show)}>\r\n                \r\n                    <Input\r\n                        className=\"color\"\r\n                        type=\"color\"\r\n                        name=\"color\"\r\n                        value={newItem.card.properties.color}\r\n                        onInput={event => setNew( { ...TYPE_NEW_CARD, payload: { ...newItem.card, properties: { color: event } } } )}\r\n                    />\r\n                    \r\n                    <Input\r\n                        className=\"title\"\r\n                        label=\"Titulo\"\r\n                        name=\"title\"\r\n                        value={newItem.card.title}\r\n                        onInput={event => setNew( { ...TYPE_NEW_CARD, payload: { ...newItem.card, title: event } } )}\r\n                    />\r\n                    \r\n                    <TextArea\r\n                        className=\"textArea\"\r\n                        style={{resize: 'none'}}\r\n                        size={{rows: '', cols: ''}}\r\n                        label=\"Descrição\"\r\n                        name=\"description\"\r\n                        value={newItem.card.description}\r\n                        onInput={event => setNew( { ...TYPE_NEW_CARD, payload: { ...newItem.card, description: event } } )}\r\n                    />\r\n                    \r\n                    <Input\r\n                        className=\"date\"\r\n                        type=\"date\"\r\n                        label=\"Data Início\"\r\n                        name=\"dateInit\"\r\n                        value={newItem.card.initial}\r\n                        onInput={event => setNew( { ...TYPE_NEW_CARD, payload: { ...newItem.card, initial: event } } )}\r\n                    />\r\n                    \r\n                    <Input\r\n                        className=\"date\"\r\n                        type=\"date\"\r\n                        label=\"Previsão de Conclusão\"\r\n                        name=\"dateEnd\"\r\n                        value={newItem.card.final}\r\n                        onInput={event => setNew( { ...TYPE_NEW_CARD, payload: { ...newItem.card, final: event } } )}\r\n                    />\r\n                    \r\n                    <Datalist\r\n                        className=\"priorityField\"\r\n                        label={\"Prioridade: \"}\r\n                        items={[\"Normal\",\"Mean\",\"High\",\"Immediate\"]}\r\n                        onInput={event => setNew( { ...TYPE_NEW_CARD, payload: { ...newItem.card, priority: event } } )}\r\n                    />\r\n\r\n                    <Button value=\"Concluir\" type=\"onSubmit\"/>\r\n                    <Button value=\"Cancelar\" onAction={handleDrop}/>\r\n                </Form>\r\n            </Modal>\r\n            <Modal show={show.viewe} handleDrop={handleDrop} name={show.card.title}>\r\n                <CardViewe card={show.card}>\r\n                    {show.children}\r\n                </CardViewe>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, { Component }from 'react';\r\n\r\nexport default class Header extends Component {\r\n    render(){\r\n        return (\r\n            <header>{this.props.children}</header>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class NavBar extends Component {\r\n    render(){\r\n        return (\r\n            <nav className=\"nav-container\">\r\n                {this.props.children}\r\n            </nav>\r\n        );\r\n    };\r\n}","import React, { Component } from 'react';\nimport DataApp from './Components/state/Data/DataProvider';\n\nimport Body from './Components/Body/Body';\nimport Header from './Components/Header/Header';\nimport NavBar from './Components/NavBar/NavBar';\n\nimport './App.css'\n\nexport default class App extends Component {\n  render(){\n    return (\n      <DataApp>\n  \n        <Header>\n          <NavBar/>\n        </Header>\n  \n        <Body/>\n      </DataApp>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}